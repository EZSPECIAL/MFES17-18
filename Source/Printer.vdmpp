class Printer
instance variables

  -- Printer config/status
  private printerCapabilities: PrinterCapability;
  private printerPricing: PrinterPricing;
  private printerCapacities: PrinterCapacity;
  private printerStatus: PrinterStatus;
  
  -- Report
  private printerReport: PrinterReport := new PrinterReport();

operations
  public Printer: PrinterCapability * PrinterPricing * PrinterCapacity * PrinterStatus ==> Printer
    Printer(capabilities, pricing, capacities, status) == (
      printerCapabilities := capabilities;
      printerPricing := pricing;
      printerCapacities := capacities;
      printerStatus := status;
 		  return self;
 		);

  public print : Document * User ==> ?
  print(document, user) ==
    is not yet specified;

  public printingCost : Document ==> ?
  printingCost(document) ==
    is not yet specified;

  public break : ()  ==> ?
  break() ==
    is not yet specified;

  public fix : ()  ==> ?
  fix() ==
    is not yet specified;

  -- prints * pricing = money received for each print type
  public printReport: ()  ==> ()
    printReport() == (
      IO`print("hello");
    );

end Printer