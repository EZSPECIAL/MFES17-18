class Printer
instance variables

  -- Printer config/status
  private printerCapabilities: PrinterCapability;
  private printerPricing: PrinterPricing;
  private printerCapacities: PrinterCapacity;
  private isOperational: bool := true; -- TODO new class

  -- Statistics
  private pagesPrinted: nat := 0; -- TODO better reporting (divide by format and color)
  private moneyReceived: real := 0; -- TODO better reporting (divide by format and color)
	
  inv moneyReceived >= 0;

operations
  -- public Printer: PrinterPricing * bool * bool * bool * bool * nat * nat * nat * nat ==> Printer
 		-- Printer(printA4, printA3, printBlack, printColor, capacityA4, capacityA3, capacityBlack, capacityColor) == (
 		  -- canPrintA4 := printA4;
 		  -- canPrintA3 := printA3;
 		  -- canPrintBlack := printBlack;
 		  -- canPrintColor := printColor;
 		  -- maxCapacityA4 := capacityA4;
 		  -- maxCapacityA3 := capacityA3;
 		  -- maxCapacityBlack := capacityBlack;
 		  -- maxCapacityColor := capacityColor;
 		  -- numberOfSheetsA4 := capacityA4;
 		  -- numberOfSheetsA3 := capacityA3;
 		  -- blackPrintsLeft := capacityBlack;
 		  -- colorPrintsLeft := capacityColor;
 		  -- return self;
 		-- )
 		--post canPrintA4 = printA4 and canPrintA3 = printA3 and canPrintBlack = printBlack and canPrintColor = printColor and
 		--maxCapacityA4 = capacityA4 and maxCapacityA3 = capacityA3 and maxCapacityBlack = capacityBlack and maxCapacityColor = capacityColor
 		--and numberOfSheetsA4 = capacityA4 and numberOfSheetsA3 = capacityA3 and blackPrintsLeft = capacityBlack and colorPrintsLeft = capacityColor;
  
  public print : Document * User ==> ?
  print(document, user) ==
    is not yet specified;

  public printingCost : Document ==> ?
  printingCost(document) ==
    is not yet specified;

  public break : ()  ==> ?
  break() ==
    is not yet specified;

  public fix : ()  ==> ?
  fix() ==
    is not yet specified;

  public  printReport : ()  ==> ?
  printReport() ==
    is not yet specified;

end Printer