class Network
instance variables
  private printerList: set of (Printer) := {};

operations

  -- Constructs a network using default parameters (empty set of printers)
  public Network: () ==> Network
 		Network() == return self;

  -- Constructs a network of printers using the specified printer list (printerList)
  public Network: set of (Printer) ==> Network
 		Network(printers) == (
 		  printerList := printers;
 		  return self;
 		);

  -- Add a printer to the network, printer name must be unique
  public addPrinter: Printer ==> ()
    addPrinter(printer) == (
      printerList := printerList union {printer};
    )
    pre not exists p2 in set printerList & p2.getPrinterName() = printer.getPrinterName();

  -- Prints the individual report of every printer in the network
  public printIndividualReport: () ==> ()
  printIndividualReport() == (
    for all printer in set printerList do printer.printIndividualReport();
  );
  
  -- TODO
  public printGlobalReport: () ==> ()
    printGlobalReport() == (
      dcl sumPages: nat := 0;
      dcl sumMoney: real := 0;
      
      -- Sum the total pages printed and money received of all network printers
      for all printer in set printerList do (
        dcl pageCount: nat := printer.sumTotalPagesPrinted();
        dcl moneyCount: real := printer.sumTotalMoneyReceived();
        sumPages := sumPages + pageCount;
        sumMoney := sumMoney + moneyCount;
      );
      
      -- Header
      IO`print("Printers in network: ");
      IO`print(card self.printerList);
      IO`print("\n");
      
      -- Pages printed
      IO`print("Total pages printed: ");
      IO`print(sumPages);
      IO`print("\n");
      
      -- Money received
      IO`print("Total money: ");
      IO`print(sumMoney);
      IO`print("\n");
      IO`print("\n");
    );

end Network